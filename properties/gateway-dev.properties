server.port={cipher}{key:config-service-key-new}AYBYv4bRWVpiwBLO5bm6Q6JNiI7EasQ8LU4PlhCWZyWi4OKJ3rmKdjAxce2vjMGq5fHv96eJjMPiYX/cZs1+StEZbkXW/1RhplAEU3GTdWJ9rjSEZqYfpV84F9x4fhiU2/Iap0uv5F0NbdEjCS0NtGIy/IBfCegWlnnKQ4KyL/36WV07Wx8EQwkjNE+Gg7CkgSVVHAel6nbn8smEXD0ETm6df0H8csLleDIGT7lkayYEzqSeTCXXv39xA4z2knMDZkq5uJZU3NMAqrEXhUWu77qsmukvffdyyd4CRe8xVA/N4xCgRAuNzK4+ZObTDxjdj53pDtso80M+DhNSXoUbeBu6Arlb9Dq+u/4oTNt+RxY4lj6clTSlH/tRCXTMfZuJFHBXWSed3m5HoMniqByUeBwyxPsoKPfLw70m+1te9Y3qi+zkB5zyTJ3o/EwKCbFprgGsIw8m1r0V0iRN64DW8ZEWOOoBGh/f2atas8sh76G8WbEzpz5j9UnRErJd6v4Rwv6llaOdqrhu7irATZMwOSaxtNJqzw9iYOVYM856rKZPGQ==

spring.cloud.gateway.routes[0].id=weatherModule
spring.cloud.gateway.routes[0].uri=lb://search
spring.cloud.gateway.routes[0].predicates[0]=Path=/weather/**

spring.cloud.gateway.routes[1].id=detailsModule
spring.cloud.gateway.routes[1].uri=lb://details
spring.cloud.gateway.routes[1].predicates[0]=Path=/details/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[2].id=universityModule
spring.cloud.gateway.routes[2].uri=lb://university
spring.cloud.gateway.routes[2].predicates[0]=Path=/university/**

spring.cloud.gateway.routes[3].id=schoolModule
spring.cloud.gateway.routes[3].uri=lb://school
spring.cloud.gateway.routes[3].predicates[0]=Path=/school/**

spring.cloud.gateway.routes[4].id=securityModule
spring.cloud.gateway.routes[4].uri=lb://security
spring.cloud.gateway.routes[4].predicates[0]=Path=/security/**

spring.cloud.gateway.discovery.locator.enabled=true

myservice.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.client.registryFetchIntervalSeconds=xx
#ribbon.ServerListRefreshInterval

#actuator endpoint
management.endpoints.web.exposure.include=*

#indicates the frequency the client sends heartbeat to server to indicate that it is alive.
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.client.serviceUrl.defaultZone={cipher}{key:config-service-key-new}AYC4rADiqyDVvn0JeaXk7R09lI1POZIT150NhSNEWnHYMhfOyK4a+u5t4Gr0nqZ1A4cELARdHHZ6WRhk8O6e8zdX4ADkRFaRkpFV4Ury4vuvP8aQRAzoG1mShVh03ze3ioUboLIviDgyJvp/Dj99T20uJywy9T8tDosNZF5OmEYXgFwmS++7xOwme26OlurJZr+ChnANBkHniNg8AB7yrQsmFDFmcFfHuUWp2Db19cLc6VYX+1PHrccCaoNQpic7fbtarIvkaXdQVxNeBHvSol/E4WK+x7APVUrSW6xA6gNESvx2cVOgj09gGST6Vg5eq5kttwuKvcuHVCxVK6SDVWZ8gcfL1aGq3VD6UZ0CJk/T9JSd1k8b0R34rCEKoxlngmnMkM94IHaCL06Rou736yrETgu/niJ3kSszyqT8QQGcN80f6E1XwYQ0Is7mf3lHDRkRnhLY8xUjOlgRXg6XlI2CZSczw0IlBPA/S592lKYxFXQY7KBpcVK3I85nlP/Yh006FKFljDuZvmKcqcHqCmOGhPBbjEVt1/aw0CZiYOWWOng4dcj56pZA83ACxnccSp4=
